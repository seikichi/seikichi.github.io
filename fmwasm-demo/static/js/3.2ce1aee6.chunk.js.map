{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/@babel/runtime/helpers/esm/createClass.js","../../../fmwasm/pkg/fmwasm.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","WASM_VECTOR_LEN","cachedTextEncoder","TextEncoder","encodeString","encodeInto","arg","view","buf","encode","set","read","written","cachegetUint8Memory","getUint8Memory","buffer","Uint8Array","passStringToWasm","len","ptr","mem","offset","code","charCodeAt","slice","subarray","cachegetInt32Memory","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","getStringFromWasm","decode","FMIndex","text","this","ret","__wrap","value","obj","create","query","memi32","Int32Array","v0","retptr","bytes","passArray8ToWasm","Range","get","arg0","__wbindgen_throw","arg1","Error"],"mappings":"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","file":"static/js/3.2ce1aee6.chunk.js","sourcesContent":["export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","import _classCallCheck from \"/home/seikichi/src/seikichi/tmp/search-soseki/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/seikichi/src/seikichi/tmp/search-soseki/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport * as wasm from './fmwasm_bg.wasm';\nvar WASM_VECTOR_LEN = 0;\nvar cachedTextEncoder = new TextEncoder('utf-8');\nvar encodeString = typeof cachedTextEncoder.encodeInto === 'function' ? function (arg, view) {\n  return cachedTextEncoder.encodeInto(arg, view);\n} : function (arg, view) {\n  var buf = cachedTextEncoder.encode(arg);\n  view.set(buf);\n  return {\n    read: arg.length,\n    written: buf.length\n  };\n};\nvar cachegetUint8Memory = null;\n\nfunction getUint8Memory() {\n  if (cachegetUint8Memory === null || cachegetUint8Memory.buffer !== wasm.memory.buffer) {\n    cachegetUint8Memory = new Uint8Array(wasm.memory.buffer);\n  }\n\n  return cachegetUint8Memory;\n}\n\nfunction passStringToWasm(arg) {\n  var len = arg.length;\n\n  var ptr = wasm.__wbindgen_malloc(len);\n\n  var mem = getUint8Memory();\n  var offset = 0;\n\n  for (; offset < len; offset++) {\n    var code = arg.charCodeAt(offset);\n    if (code > 0x7F) break;\n    mem[ptr + offset] = code;\n  }\n\n  if (offset !== len) {\n    if (offset !== 0) {\n      arg = arg.slice(offset);\n    }\n\n    ptr = wasm.__wbindgen_realloc(ptr, len, len = offset + arg.length * 3);\n    var view = getUint8Memory().subarray(ptr + offset, ptr + len);\n    var ret = encodeString(arg, view);\n    offset += ret.written;\n  }\n\n  WASM_VECTOR_LEN = offset;\n  return ptr;\n}\n\nfunction passArray8ToWasm(arg) {\n  var ptr = wasm.__wbindgen_malloc(arg.length * 1);\n\n  getUint8Memory().set(arg, ptr / 1);\n  WASM_VECTOR_LEN = arg.length;\n  return ptr;\n}\n\nvar cachegetInt32Memory = null;\n\nfunction getInt32Memory() {\n  if (cachegetInt32Memory === null || cachegetInt32Memory.buffer !== wasm.memory.buffer) {\n    cachegetInt32Memory = new Int32Array(wasm.memory.buffer);\n  }\n\n  return cachegetInt32Memory;\n}\n\nvar cachedTextDecoder = new TextDecoder('utf-8', {\n  ignoreBOM: true,\n  fatal: true\n});\n\nfunction getStringFromWasm(ptr, len) {\n  return cachedTextDecoder.decode(getUint8Memory().subarray(ptr, ptr + len));\n}\n/**\n*/\n\n\nexport var FMIndex =\n/*#__PURE__*/\nfunction () {\n  _createClass(FMIndex, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_fmindex_free(ptr);\n    }\n    /**\n    * @param {string} text\n    * @returns {FMIndex}\n    */\n\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(FMIndex.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }]);\n\n  function FMIndex(text) {\n    _classCallCheck(this, FMIndex);\n\n    var ret = wasm.fmindex_new(passStringToWasm(text), WASM_VECTOR_LEN);\n    return FMIndex.__wrap(ret);\n  }\n  /**\n  * @param {Uint8Array} bytes\n  * @returns {FMIndex}\n  */\n\n\n  _createClass(FMIndex, [{\n    key: \"contains\",\n\n    /**\n    * @param {string} query\n    * @returns {boolean}\n    */\n    value: function contains(query) {\n      var ret = wasm.fmindex_contains(this.ptr, passStringToWasm(query), WASM_VECTOR_LEN);\n      return ret !== 0;\n    }\n    /**\n    * @param {string} query\n    * @returns {number}\n    */\n\n  }, {\n    key: \"counts\",\n    value: function counts(query) {\n      var ret = wasm.fmindex_counts(this.ptr, passStringToWasm(query), WASM_VECTOR_LEN);\n      return ret >>> 0;\n    }\n    /**\n    * @param {string} query\n    * @returns {Range}\n    */\n\n  }, {\n    key: \"search\",\n    value: function search(query) {\n      var ret = wasm.fmindex_search(this.ptr, passStringToWasm(query), WASM_VECTOR_LEN);\n      return Range.__wrap(ret);\n    }\n    /**\n    * @param {number} i\n    * @returns {number}\n    */\n\n  }, {\n    key: \"locate\",\n    value: function locate(i) {\n      var ret = wasm.fmindex_locate(this.ptr, i);\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} i\n    * @param {number} len\n    * @returns {string}\n    */\n\n  }, {\n    key: \"previous_string\",\n    value: function previous_string(i, len) {\n      var retptr = 8;\n      var ret = wasm.fmindex_previous_string(retptr, this.ptr, i, len);\n      var memi32 = getInt32Memory();\n      var v0 = getStringFromWasm(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1]).slice();\n\n      wasm.__wbindgen_free(memi32[retptr / 4 + 0], memi32[retptr / 4 + 1] * 1);\n\n      return v0;\n    }\n  }], [{\n    key: \"from\",\n    value: function from(bytes) {\n      var ret = wasm.fmindex_from(passArray8ToWasm(bytes), WASM_VECTOR_LEN);\n      return FMIndex.__wrap(ret);\n    }\n  }]);\n\n  return FMIndex;\n}();\n/**\n*/\n\nexport var Range =\n/*#__PURE__*/\nfunction () {\n  function Range() {\n    _classCallCheck(this, Range);\n  }\n\n  _createClass(Range, [{\n    key: \"free\",\n    value: function free() {\n      var ptr = this.ptr;\n      this.ptr = 0;\n\n      wasm.__wbg_range_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"start\",\n    get: function get() {\n      var ret = wasm.__wbg_get_range_start(this.ptr);\n\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    ,\n    set: function set(arg0) {\n      wasm.__wbg_set_range_start(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n\n  }, {\n    key: \"end\",\n    get: function get() {\n      var ret = wasm.__wbg_get_range_end(this.ptr);\n\n      return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    ,\n    set: function set(arg0) {\n      wasm.__wbg_set_range_end(this.ptr, arg0);\n    }\n  }], [{\n    key: \"__wrap\",\n    value: function __wrap(ptr) {\n      var obj = Object.create(Range.prototype);\n      obj.ptr = ptr;\n      return obj;\n    }\n  }]);\n\n  return Range;\n}();\nexport var __wbindgen_throw = function __wbindgen_throw(arg0, arg1) {\n  throw new Error(getStringFromWasm(arg0, arg1));\n};"],"sourceRoot":""}